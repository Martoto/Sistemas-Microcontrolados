


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         ; Este é um projeto template.
    7 00000000         
    8 00000000         
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         
   13 00000000         ; Declarações EQU - Defines
   14 00000000         ;<NOME>         EQU <VALOR>
   15 00000000         ; ========================
   16 00000000         ; Definições de Valores
   17 00000000         
   18 00000000         
   19 00000000         ; ------------------------------------------------------
                       -------------------------
   20 00000000         ; Área de Dados - Declarações de variáveis
   21 00000000                 AREA             DATA, ALIGN=2
   22 00000000         ; Se alguma variável for chamada em outro arquivo
   23 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   24 00000000         ; partir de outro arquivo
   25 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   26 00000000         ; de <tam> bytes a partir da primeira 
   27 00000000         ; posição da RAM  
   28 00000000         
   29 00000000         ; ------------------------------------------------------
                       -------------------------
   30 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   31 00000000         ;                  código
   32 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   33 00000000         
   34 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   35 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   36 00000000         ; outro arquivo. No caso startup.s
   37 00000000         
   38 00000000         ; Se chamar alguma função externa 
   39 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   40 00000000         ; função <func>
   41 00000000                 IMPORT           PLL_Init
   42 00000000                 IMPORT           SysTick_Init
   43 00000000                 IMPORT           SysTick_Wait1ms
   44 00000000         ; ****************************************
   45 00000000         ; Importar as funções declaradas em outros arquivos
   46 00000000         ; ****************************************



ARM Macro Assembler    Page 2 


   47 00000000                 IMPORT           GPIO_Init
   48 00000000                 IMPORT           PortJ_Input
   49 00000000                 IMPORT           Port_Output
   50 00000000                 IMPORT           PortA_Output
   51 00000000                 IMPORT           PortP_Output
   52 00000000                 IMPORT           PortQ_Output
   53 00000000                 IMPORT           PortB_Output
   54 00000000         
   55 00000000         ; ------------------------------------------------------
                       -------------------------
   56 00000000         ; Função main()
   57 00000000         
   58 00000000 0000003F 
                       DIGITO_0
                               EQU              2_00111111
   59 00000000 00000006 
                       DIGITO_1
                               EQU              2_00000110
   60 00000000 0000005B 
                       DIGITO_2
                               EQU              2_01011011
   61 00000000 0000004F 
                       DIGITO_3
                               EQU              2_01001111
   62 00000000 00000066 
                       DIGITO_4
                               EQU              2_01100110
   63 00000000 0000006D 
                       DIGITO_5
                               EQU              2_01101101
   64 00000000 0000007D 
                       DIGITO_6
                               EQU              2_01111101
   65 00000000 00000007 
                       DIGITO_7
                               EQU              2_00000111
   66 00000000 0000007F 
                       DIGITO_8
                               EQU              2_01111111
   67 00000000 00000067 
                       DIGITO_9
                               EQU              2_01100111
   68 00000000 0000001E 
                       TICKS   EQU              30
   69 00000000         
   70 00000000         
   71 00000000         Start
   72 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   73 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   74 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   75 0000000C         ; ****************************************
   76 0000000C         ; Fazer as demais inicializações aqui.



ARM Macro Assembler    Page 3 


   77 0000000C         ; ****************************************
   78 0000000C F04F 0401       MOV              R4, #2_00000001 ; primeira posi
                                                            ção da operação pas
                                                            seio do cavaleiro
   79 00000010 F04F 0501       MOV              R5, #1
   80 00000014 F04F 0600       MOV              R6, #0      ;unidade da contage
                                                            m
   81 00000018 F04F 0A00       MOV              R10, #0     ;dezena da contagem
                                                            
   82 0000001C         
   83 0000001C         ; direção da operação passeio do cavaleiro -> direita = 
                       0, esquerda = 1
   84 0000001C F04F 0901       MOV              R9, #1      ; conta passo atual
                                                            
   85 00000020 F04F 0700       MOV              R7, #0      ; contador display
   86 00000024 F04F 0800       MOV              R8, #0      ;tick
   87 00000028 F04F 0B00       MOV              R11, #0     ; buttonDown
   88 0000002C         
   89 0000002C         MainLoop
   90 0000002C         ; ****************************************
   91 0000002C         ; Escrever código o loop principal aqui. 
   92 0000002C         ; ****************************************
   93 0000002C         
   94 0000002C         ;   MOV R0, R8     
   95 0000002C         ;   PUSH {LR}    
   96 0000002C         ;   BL SysTick_Wait1ms
   97 0000002C         ;   POP {LR}
   98 0000002C         
   99 0000002C F000 F807       BL               verificaBotoes
  100 00000030 F000 F827       BL               acendeLeds
  101 00000034 F000 F839       BL               acendeDisplay
  102 00000038 F000 F876       BL               contador
  103 0000003C E7F6            B                MainLoop
  104 0000003E         
  105 0000003E         verificaBotoes
  106 0000003E B500            PUSH             {LR}
  107 00000040 F7FF FFFE       BL               PortJ_Input
  108 00000044 F85D EB04       POP              {LR}
  109 00000048         
  110 00000048 F1BB 0F00       CMP              R11, #0
  111 0000004C BF08            IT               EQ
  112 0000004E E013            BEQ              minStep
  113 00000050         
  114 00000050 F1B9 0F0A       CMP              R9, #10
  115 00000054 D006            BEQ              maxStep
  116 00000056 2802            CMP              R0, #2_00000010 ; verifica se o
                                                             passo ainda não at
                                                            ingiu 9
  117 00000058 BF08            IT               EQ          ; se sim     
  118 0000005A F109 0901       ADDEQ            R9, #1      ; Adiciona um ao pa
                                                            sso 
  119 0000005E BF08 F04F 
              0B00             MOVEQ            R11, #0
  120 00000064         maxStep
  121 00000064         
  122 00000064 F1B9 0F01       CMP              R9, #1
  123 00000068 D006            BEQ              minStep
  124 0000006A 2801            CMP              R0, #2_00000001 ; verifica se o
                                                             passo ainda não at



ARM Macro Assembler    Page 4 


                                                            ingiu 1
  125 0000006C BF08            IT               EQ          ; se sim   
  126 0000006E F1A9 0901       SUBEQ            R9, #1      ; Subtrai um ao pas
                                                            so 
  127 00000072 BF08 F04F 
              0B00             MOVEQ            R11, #0
  128 00000078         
  129 00000078         minStep
  130 00000078         
  131 00000078 2803            CMP              R0, #3
  132 0000007A BF08            IT               EQ
  133 0000007C F04F 0B01       MOVEQ            R11, #1
  134 00000080         
  135 00000080         
  136 00000080 4770            BX               LR
  137 00000082         
  138 00000082         
  139 00000082         acendeLeds
  140 00000082 B500            PUSH             {LR}
  141 00000084 4620            MOV              R0, R4      ; carrega para R0 a
                                                             posição inicial do
                                                             modo passeio do ca
                                                            valeiro
  142 00000086 F7FF FFFE       BL               PortA_Output
  143 0000008A 4620            MOV              R0, R4      ; carrega para R0 a
                                                             posição inicial do
                                                             modo passeio do ca
                                                            valeiro
  144 0000008C F7FF FFFE       BL               PortQ_Output
  145 00000090 F04F 0020       MOV              R0, #2_00100000
  146 00000094 F7FF FFFE       BL               PortP_Output
  147 00000098         
  148 00000098 F000 F85D       BL               waitTransistor
  149 0000009C         
  150 0000009C         
  151 0000009C F04F 0000       MOV              R0, #2_00000000
  152 000000A0 F7FF FFFE       BL               PortP_Output
  153 000000A4 F85D EB04       POP              {LR}
  154 000000A8         
  155 000000A8 4770            BX               LR
  156 000000AA         
  157 000000AA         
  158 000000AA         acendeDisplay
  159 000000AA F04F 030A       MOV              R3, #10
  160 000000AE F04F 0600       MOV              R6, #0      ;
  161 000000B2 FBB7 FAF3       UDIV             R10, R7, R3 ;Divide R7 por R3, 
                                                            R10 é casa decimal
  162 000000B6 FB03 761A       MLS              R6, R3, R10, R7 ;R6 é o resto d
                                                            a divisão, casa uni
                                                            dade
  163 000000BA         
  164 000000BA         
  165 000000BA         
  166 000000BA B500            PUSH{LR}
  167 000000BC F000 F853       BL               pegaDigito
  168 000000C0 F000 F80A       BL               carregaUnidade
  169 000000C4 4656            MOV              R6, R10
  170 000000C6 F000 F84E       BL               pegaDigito
  171 000000CA F000 F819       BL               carregaDezena



ARM Macro Assembler    Page 5 


  172 000000CE F000 F842       BL               waitTransistor
  173 000000D2 F85D EB04       POP{LR}
  174 000000D6 4770            BX               LR
  175 000000D8         
  176 000000D8         
  177 000000D8         carregaUnidade
  178 000000D8 B500            PUSH{LR}
  179 000000DA 4630            MOV              R0, R6
  180 000000DC F7FF FFFE       BL               PortA_Output
  181 000000E0         
  182 000000E0 4630            MOV              R0, R6
  183 000000E2 F7FF FFFE       BL               PortQ_Output
  184 000000E6         
  185 000000E6 F04F 0020       MOV              R0, #2_00100000
  186 000000EA F7FF FFFE       BL               PortB_Output
  187 000000EE F000 F832       BL               waitTransistor
  188 000000F2 F04F 0000       MOV              R0, #2_00000000
  189 000000F6 F7FF FFFE       BL               PortB_Output
  190 000000FA F85D EB04       POP{LR}
  191 000000FE 4770            BX               LR
  192 00000100         
  193 00000100         carregaDezena
  194 00000100 B500            PUSH{LR}
  195 00000102 4630            MOV              R0, R6
  196 00000104 F7FF FFFE       BL               PortA_Output
  197 00000108         
  198 00000108 4630            MOV              R0, R6
  199 0000010A F7FF FFFE       BL               PortQ_Output
  200 0000010E         
  201 0000010E F04F 0010       MOV              R0, #2_00010000
  202 00000112 F7FF FFFE       BL               PortB_Output
  203 00000116 F000 F81E       BL               waitTransistor
  204 0000011A F04F 0000       MOV              R0, #2_00000000
  205 0000011E F7FF FFFE       BL               PortB_Output
  206 00000122 F85D EB04       POP{LR}
  207 00000126 4770            BX               LR
  208 00000128         
  209 00000128         contador
  210 00000128         
  211 00000128 F1B8 0F1E       CMP              R8, #TICKS
  212 0000012C BF0E F04F 
              0800             MOVEQ            R8, #0
  213 00000132 F108 0801       ADDNE            R8, #1
  214 00000136 4770            BXNE             LR
  215 00000138         
  216 00000138 444F            ADD              R7, R9      ; Incrementa o cont
                                                            ador 
  217 0000013A 2F63            CMP              R7, #99     ; Verifica se já ch
                                                            egou em 99
  218 0000013C BF28            IT               CS          ; Se chegou
  219 0000013E 2700            MOVCS            R7, #0      ; Zera o contador
  220 00000140         
  221 00000140         
  222 00000140         ; Passeio do Cavaleiro
  223 00000140 2D00            CMP              R5, #0
  224 00000142 BF0C            ITE              EQ
  225 00000144 0864            LSREQ            R4, #1
  226 00000146 0064            LSLNE            R4, #1
  227 00000148         



ARM Macro Assembler    Page 6 


  228 00000148 2C01            CMP              R4, #2_00000001 ; Verifica se o
                                                             cavaleiro já chego
                                                            u ao último led da 
                                                            direita
  229 0000014A BF08            IT               EQ          ; se chegou
  230 0000014C 2501            MOVEQ            R5, #1      ; altera a direção 
                                                            - vai pra esquerda
  231 0000014E         
  232 0000014E 2C80            CMP              R4, #2_10000000 ; Verifica se o
                                                             cavaleiro já chego
                                                            u ao último led da 
                                                            esquerda 
  233 00000150 BF08            IT               EQ          ; se chegou
  234 00000152 2500            MOVEQ            R5, #0      ; altera a direção 
                                                            - vai pra direita
  235 00000154         
  236 00000154 4770            BX               LR
  237 00000156         
  238 00000156         waitTransistor
  239 00000156 F04F 0003       MOV              R0, #3      ; carrega a velocid
                                                            ade para o R0 -- qu
                                                            e é o registrador q
                                                            ue a função SysTick
                                                            _Wait1ms puxa
  240 0000015A B500            PUSH             {LR}
  241 0000015C F7FF FFFE       BL               SysTick_Wait1ms
  242 00000160 F85D EB04       POP              {LR}
  243 00000164 4770            BX               LR
  244 00000166         
  245 00000166         pegaDigito
  246 00000166 2E00            CMP              R6, #0
  247 00000168 BF04            ITT              EQ
  248 0000016A 263F            LDREQ            R6, =DIGITO_0
  249 0000016C 4770            BXEQ             LR
  250 0000016E 2E01            CMP              R6, #1
  251 00000170 BF04            ITT              EQ
  252 00000172 2606            LDREQ            R6, =DIGITO_1
  253 00000174 4770            BXEQ             LR
  254 00000176 2E02            CMP              R6, #2
  255 00000178 BF04            ITT              EQ
  256 0000017A 265B            LDREQ            R6, =DIGITO_2
  257 0000017C 4770            BXEQ             LR
  258 0000017E 2E03            CMP              R6, #3
  259 00000180 BF04            ITT              EQ
  260 00000182 264F            LDREQ            R6, =DIGITO_3
  261 00000184 4770            BXEQ             LR
  262 00000186 2E04            CMP              R6, #4
  263 00000188 BF04            ITT              EQ
  264 0000018A 2666            LDREQ            R6, =DIGITO_4
  265 0000018C 4770            BXEQ             LR
  266 0000018E 2E05            CMP              R6, #5
  267 00000190 BF04            ITT              EQ
  268 00000192 266D            LDREQ            R6, =DIGITO_5
  269 00000194 4770            BXEQ             LR
  270 00000196 2E06            CMP              R6, #6
  271 00000198 BF04            ITT              EQ
  272 0000019A 267D            LDREQ            R6, =DIGITO_6
  273 0000019C 4770            BXEQ             LR
  274 0000019E 2E07            CMP              R6, #7



ARM Macro Assembler    Page 7 


  275 000001A0 BF04            ITT              EQ
  276 000001A2 2607            LDREQ            R6, =DIGITO_7
  277 000001A4 4770            BXEQ             LR
  278 000001A6 2E08            CMP              R6, #8
  279 000001A8 BF04            ITT              EQ
  280 000001AA 267F            LDREQ            R6, =DIGITO_8
  281 000001AC 4770            BXEQ             LR
  282 000001AE 2E09            CMP              R6, #9
  283 000001B0 BF08            IT               EQ
  284 000001B2 2667            LDREQ            R6, =DIGITO_9
  285 000001B4 4770            BX               LR
  286 000001B6         
  287 000001B6         
  288 000001B6         
  289 000001B6         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  290 000001B6         ; Fim do Arquivo
  291 000001B6         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  292 000001B6 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  293 000001B8                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -I"D:\Programs\keil arm 
core\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129" --predefine="__EVAL SETA 1" --
predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SETA 1" --lis
t=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 0000002C

Symbol: MainLoop
   Definitions
      At line 89 in file main.s
   Uses
      At line 103 in file main.s
Comment: MainLoop used once
Start 00000000

Symbol: Start
   Definitions
      At line 71 in file main.s
   Uses
      At line 35 in file main.s
Comment: Start used once
acendeDisplay 000000AA

Symbol: acendeDisplay
   Definitions
      At line 158 in file main.s
   Uses
      At line 101 in file main.s
Comment: acendeDisplay used once
acendeLeds 00000082

Symbol: acendeLeds
   Definitions
      At line 139 in file main.s
   Uses
      At line 100 in file main.s
Comment: acendeLeds used once
carregaDezena 00000100

Symbol: carregaDezena
   Definitions
      At line 193 in file main.s
   Uses
      At line 171 in file main.s
Comment: carregaDezena used once
carregaUnidade 000000D8

Symbol: carregaUnidade
   Definitions
      At line 177 in file main.s
   Uses
      At line 168 in file main.s
Comment: carregaUnidade used once
contador 00000128

Symbol: contador



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 209 in file main.s
   Uses
      At line 102 in file main.s
Comment: contador used once
maxStep 00000064

Symbol: maxStep
   Definitions
      At line 120 in file main.s
   Uses
      At line 115 in file main.s
Comment: maxStep used once
minStep 00000078

Symbol: minStep
   Definitions
      At line 129 in file main.s
   Uses
      At line 112 in file main.s
      At line 123 in file main.s

pegaDigito 00000166

Symbol: pegaDigito
   Definitions
      At line 245 in file main.s
   Uses
      At line 167 in file main.s
      At line 170 in file main.s

verificaBotoes 0000003E

Symbol: verificaBotoes
   Definitions
      At line 105 in file main.s
   Uses
      At line 99 in file main.s
Comment: verificaBotoes used once
waitTransistor 00000156

Symbol: waitTransistor
   Definitions
      At line 238 in file main.s
   Uses
      At line 148 in file main.s
      At line 172 in file main.s
      At line 187 in file main.s
      At line 203 in file main.s

13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DIGITO_0 0000003F

Symbol: DIGITO_0
   Definitions
      At line 58 in file main.s
   Uses
      At line 248 in file main.s
Comment: DIGITO_0 used once
DIGITO_1 00000006

Symbol: DIGITO_1
   Definitions
      At line 59 in file main.s
   Uses
      At line 252 in file main.s
Comment: DIGITO_1 used once
DIGITO_2 0000005B

Symbol: DIGITO_2
   Definitions
      At line 60 in file main.s
   Uses
      At line 256 in file main.s
Comment: DIGITO_2 used once
DIGITO_3 0000004F

Symbol: DIGITO_3
   Definitions
      At line 61 in file main.s
   Uses
      At line 260 in file main.s
Comment: DIGITO_3 used once
DIGITO_4 00000066

Symbol: DIGITO_4
   Definitions
      At line 62 in file main.s
   Uses
      At line 264 in file main.s
Comment: DIGITO_4 used once
DIGITO_5 0000006D

Symbol: DIGITO_5
   Definitions
      At line 63 in file main.s
   Uses
      At line 268 in file main.s
Comment: DIGITO_5 used once
DIGITO_6 0000007D

Symbol: DIGITO_6
   Definitions
      At line 64 in file main.s
   Uses
      At line 272 in file main.s
Comment: DIGITO_6 used once
DIGITO_7 00000007

Symbol: DIGITO_7



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 65 in file main.s
   Uses
      At line 276 in file main.s
Comment: DIGITO_7 used once
DIGITO_8 0000007F

Symbol: DIGITO_8
   Definitions
      At line 66 in file main.s
   Uses
      At line 280 in file main.s
Comment: DIGITO_8 used once
DIGITO_9 00000067

Symbol: DIGITO_9
   Definitions
      At line 67 in file main.s
   Uses
      At line 284 in file main.s
Comment: DIGITO_9 used once
TICKS 0000001E

Symbol: TICKS
   Definitions
      At line 68 in file main.s
   Uses
      At line 211 in file main.s
Comment: TICKS used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 47 in file main.s
   Uses
      At line 74 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 41 in file main.s
   Uses
      At line 72 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 50 in file main.s
   Uses
      At line 142 in file main.s
      At line 180 in file main.s
      At line 196 in file main.s

PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 53 in file main.s
   Uses
      At line 186 in file main.s
      At line 189 in file main.s
      At line 202 in file main.s
      At line 205 in file main.s

PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 48 in file main.s
   Uses
      At line 107 in file main.s
Comment: PortJ_Input used once
PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 51 in file main.s
   Uses
      At line 146 in file main.s
      At line 152 in file main.s

PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 52 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Uses
      At line 144 in file main.s
      At line 183 in file main.s
      At line 199 in file main.s

Port_Output 00000000

Symbol: Port_Output
   Definitions
      At line 49 in file main.s
   Uses
      None
Comment: Port_Output unused
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 42 in file main.s
   Uses
      At line 73 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 43 in file main.s
   Uses
      At line 241 in file main.s
Comment: SysTick_Wait1ms used once
10 symbols
369 symbols in table
